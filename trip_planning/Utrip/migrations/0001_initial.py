# Generated by Django 5.0.6 on 2025-04-05 10:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('blog', models.CharField(max_length=1000)),
                ('img1', models.ImageField(upload_to='pictures/pics_blog')),
                ('img2', models.ImageField(upload_to='pictures/pics_blog')),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='pictures/pics_blog')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('province', models.CharField(choices=[('Punjab', 'Punjab'), ('Sindh', 'Sindh'), ('Khyber Pakhtunkhwa', 'Khyber Pakhtunkhwa'), ('Balochistan', 'Balochistan'), ('Islamabad Capital Territory', 'Islamabad Capital Territory'), ('Azad Jammu & Kashmir', 'Azad Jammu & Kashmir'), ('Gilgit-Baltistan', 'Gilgit-Baltistan')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination_spot', models.CharField(max_length=100, null=True)),
                ('keywords', models.CharField(max_length=250)),
                ('featured_img', models.ImageField(upload_to='pictures/pics')),
                ('img1', models.ImageField(upload_to='pictures/pics')),
                ('img2', models.ImageField(upload_to='pictures/pics')),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Utrip.category')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Utrip.city')),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('profile_picture', models.ImageField(blank=True, default='profile_pictures/default.jpg', upload_to='pictures/profile_pictures/')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100)),
                ('review', models.TextField(blank=True)),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('ip', models.CharField(blank=True, max_length=20)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='Utrip.destination')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100)),
                ('review', models.TextField(blank=True)),
                ('rating', models.FloatField()),
                ('ip', models.CharField(blank=True, max_length=20)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Utrip.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transportation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sedan', 'Sedan'), ('suv', 'SUV'), ('offroader', 'Offroader'), ('hatchback', 'Hatchback'), ('crossover', 'Crossover'), ('hybrid', 'Hybrid')], default='sedan', max_length=50)),
                ('registeration_number', models.CharField(max_length=20)),
                ('average_rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('img1', models.ImageField(blank=True, null=True, upload_to='pictures/pics_vehicle')),
                ('img2', models.ImageField(blank=True, null=True, upload_to='pictures/pics_vehicle')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Utrip.city')),
            ],
        ),
        migrations.CreateModel(
            name='TripProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('destination', models.ManyToManyField(related_name='trip_proposals', to='Utrip.destination')),
                ('invitees', models.ManyToManyField(related_name='trip_invites', to=settings.AUTH_USER_MODEL)),
                ('proposer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('average_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rooms', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('contact', models.CharField(max_length=20)),
                ('img1', models.ImageField(blank=True, null=True, upload_to='pictures/pics_rooms/')),
                ('img2', models.ImageField(blank=True, null=True, upload_to='pictures/pics_rooms/')),
                ('address', models.TextField()),
                ('business_license', models.FileField(upload_to='documents/business_licenses/')),
                ('registration_certificate', models.FileField(upload_to='documents/registration_certificates/')),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Utrip.city')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Utrip.type')),
            ],
        ),
    ]
